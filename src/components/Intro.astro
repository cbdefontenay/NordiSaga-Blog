---
import { Image } from "astro:assets";
import portrait from "../../public/margrethe.jpg";
---

<div
  class="relative mx-12 flex flex-col items-center justify-center gap-12 xl:flex-row xl:gap-36"
>
  <div class="w-full xl:w-1/2">
    <h1 class="text-lg md:text-xl font-skranjiBold my-5">
      NordiSaga ! <span
        id="scribble"
        class="font-bold font-skranjiRegular text-lg"
        >Entrez dans l'univers du Nord de l'Europe.</span
      >
    </h1>

    <div class="relative">
      <svg class="absolute h-full w-full overflow-visible">
        <defs>
          <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style={{ stopColor: "#155bbf", stopOpacity: 1 }}
            ></stop>
            <stop offset="100%" style={{ stopColor: "#ba360e", stopOpacity: 1 }}
            ></stop>
          </linearGradient>
        </defs>
        <path
          id="border-path"
          fill="none"
          stroke="url(#gradient)"
          stroke-width="4"></path>
      </svg>

      <p
        id="anim-p"
        class="text-sm md:text-lg p-6 text-main text-justify font-robotoRegular"
      >
        Bienvenue sur <span class="font-bold text-primary font-skranjiRegular"
          >Nordisaga.</span
        >
         Comme son nom l'indique, il s'agit ici de vous raconter l'histoire du
        Nord de l'Europe, et plus particulièrement de la Scandinavie et du Nord
        de l'Allemagne.<br />
        <br />
         Des Vikings à la Ligue hanséatique (die deutsche Hanse), à travers les
        articles de NordiSaga, vous trouverez de quoi rassasier votre appétit
        d'historien en herbe.
        <br />
        <br />
         Tout comme le 20 juillet 1397 marqua l'histoire du Danemark en
        rassemblant les couronnes des royaumes scandinaves sous la régence de <span
          class="font-bold text-primary font-skranjiRegular">Marguerite I</span
        > du Danemark, NordiSaga essaie de compresser le plus possible
        l'histoire et de vous la rendre le plus compréhensible possible avec des
        sources à l'appui.
      </p>
    </div>
    <div
      class="flex justify-center pt-12 text-center text-main text-content xl:gap-16"
    >
      <div class="w-32">
        <h2>Jour</h2>
        <p id="art-counter" class="text-xl font-bold">20</p>
      </div>
      <div class="w-32">
        <h2>Mois</h2>
        <p id="youtube-counter" class="text-xl font-bold">07</p>
      </div>
      <div class="w-32">
        <h2>Année</h2>
        <p id="reviews-counter" class="text-bold text-xl font-bold">1397</p>
      </div>
    </div>
  </div>

  <div class="relative">
    <Image
      class="rounded-xl"
      width="400"
      height="500"
      src={portrait}
      alt="Portrait de la reine Marguerite"
    />
  </div>
</div>

<!-- transition -->
<div class="relative mt-12 h-20 w-full bg-black pb-5">
  <svg class="absolute h-full w-full overflow-visible">
    <defs>
      <linearGradient id="runes" x1="0%" y1="0%" x2="100%" y2="0%">
        <stop offset="0%" style={{ stopColor: "#04747c", stopOpacity: 1 }}
        ></stop>
        <stop offset="100%" style={{ stopColor: "#1548a5", stopOpacity: 1 }}
        ></stop>
      </linearGradient>
    </defs>
    <text
      x="50%"
      y="50%"
      font-size="50"
      fill="url(#runes)"
      text-anchor="middle"
      dominant-baseline="middle"
      class="text-base md:text-xl"
    >
      ᚴᚢᚱᚦ ᚴᚢᚴ ᚴᚢᚾᚢᚱ ᚢᛅ ᚢᛏᛅ ᚠᚱᛅᚾ ᚦᛅ ᚢᛒ ᚴᚱᚢᚦ ᛅᚢᚴ ᚱᛅᚾ ᚴᚢᚾ
    </text>
  </svg>
</div>

<style>
  #border-path {
    animation: draw 2s forwards 1s ease-out;
  }

  @keyframes draw {
    to {
      stroke-dashoffset: 50;
    }
  }
</style>

<script>
  function updatePath() {
    const textMain = document.querySelector("#anim-p") as HTMLElement;
    const path = document.querySelector("#border-path") as SVGPathElement;

    if (textMain && path) {
      path.setAttribute(
        "d",
        `M0,0 V${textMain.offsetHeight} H${textMain.offsetWidth} v${
          textMain.offsetHeight / 2
        }`
      );
      const pathLength = path.getTotalLength();

      path.style.strokeDasharray = pathLength.toString();
      path.style.strokeDashoffset = pathLength.toString();
    }
  }

  //Increment
  function incrementCounter(
    selector: string,
    current: number,
    target: number,
    duration: number,
    letter: string = ""
  ) {
    let counter = document.getElementById(selector);
    let stepTime = Math.abs(Math.floor(duration / target));
    if (current < target && counter) {
      current++;
      counter.innerText = current.toString() + letter;
      setTimeout(
        () => incrementCounter(selector, current, target, duration, letter),
        stepTime
      );
    }
  }
  incrementCounter("art-counter", 0, 20, 1000);
  incrementCounter("youtube-counter", 0, 7, 2000);
  incrementCounter("reviews-counter", 0, 1397, 10);

  // Update the path when the page loads
  window.addEventListener("DOMContentLoaded", updatePath);
  // Update the path when the window is resized
  window.addEventListener("resize", updatePath);
</script>
